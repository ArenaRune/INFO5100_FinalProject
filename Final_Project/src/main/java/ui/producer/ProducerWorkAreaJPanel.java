/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.producer;

import db4outil.DB4OUtil;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.EcoSystem;
import model.movie.Movie;
import model.network.Network;
import model.role.CastRole;
import model.role.DirectorRole;
import model.role.ProducerRole;
import model.role.ScreenWriterRole;
import model.useraccount.UserAccount;
import model.workrequest.CastWorkRequest;
import model.workrequest.ProducerWorkRequest;
import model.workrequest.WorkRequest;

/**
 *
 * @author navyaravuri
 */
public class ProducerWorkAreaJPanel extends javax.swing.JPanel {
    JPanel userProcessContainer;
    Network network;
    UserAccount ua;
    ProducerRole pr;
    EcoSystem system;
    /**
     * Creates new form ProducerWorkAreaJPanel
     */
    public ProducerWorkAreaJPanel(JPanel userProcessContainer, EcoSystem system, Network network, UserAccount ua) {
        initComponents();
        
        this.system = system;
        this.userProcessContainer = userProcessContainer;
        this.network = network;
        this.ua = ua;
        pr = (ProducerRole) ua.getRole();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnLogout = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        btnPlan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProdWorkArea = new javax.swing.JTable();
        btnMake = new javax.swing.JButton();
        btnDistribute = new javax.swing.JButton();
        btnHistory = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        btnLogout.setBackground(new java.awt.Color(204, 204, 255));
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 51, 51));
        lblTitle.setText("Producer Work Area");

        btnPlan.setBackground(new java.awt.Color(153, 204, 255));
        btnPlan.setText("Plan a Movie");
        btnPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlanActionPerformed(evt);
            }
        });

        tblProdWorkArea.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Movie", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProdWorkArea);
        if (tblProdWorkArea.getColumnModel().getColumnCount() > 0) {
            tblProdWorkArea.getColumnModel().getColumn(0).setResizable(false);
            tblProdWorkArea.getColumnModel().getColumn(1).setResizable(false);
        }

        btnMake.setBackground(new java.awt.Color(136, 197, 197));
        btnMake.setText("Make Movie");
        btnMake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMakeActionPerformed(evt);
            }
        });

        btnDistribute.setBackground(new java.awt.Color(153, 204, 255));
        btnDistribute.setText("Distribute Movie");
        btnDistribute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDistributeActionPerformed(evt);
            }
        });

        btnHistory.setBackground(new java.awt.Color(136, 197, 197));
        btnHistory.setText("Movie History");
        btnHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(btnLogout)
                        .addGap(185, 185, 185)
                        .addComponent(lblTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(328, 328, 328)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDistribute)
                            .addComponent(btnPlan)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnMake)
                                .addGap(364, 364, 364)
                                .addComponent(btnHistory))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(115, 115, 115))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDistribute, btnPlan});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle)
                    .addComponent(btnLogout))
                .addGap(18, 18, 18)
                .addComponent(btnPlan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDistribute)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMake)
                    .addComponent(btnHistory))
                .addGap(210, 210, 210))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDistribute, btnPlan});

    }// </editor-fold>//GEN-END:initComponents

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlanActionPerformed
        // TODO add your handling code here:
        MoviePlanJPanel moviePlanJPanel = new MoviePlanJPanel(userProcessContainer, system, network, ua);
        userProcessContainer.add("moviePlanJPanel", moviePlanJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnPlanActionPerformed

    private void btnMakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMakeActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblProdWorkArea.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a movie first.");
            return;
        }
        ProducerWorkRequest pwr = (ProducerWorkRequest) tblProdWorkArea.getValueAt(selectedRowIndex, 0);
        if (!pwr.getStatus().equals("accept")) {
            JOptionPane.showMessageDialog(this, "Movie status is still pending.");
            return;
        }
        
        ArrayList<CastRole> cast = new ArrayList<CastRole>();
        for (CastWorkRequest cwr: pwr.getCastWorkRequests()) {
            cast.add((CastRole) cwr.getReceiver());
        }
        DirectorRole dr = (DirectorRole) pwr.getDirectorWorkRequest().getReceiver();
        ScreenWriterRole swr = (ScreenWriterRole) pwr.getScreenWriterWorkRequest().getReceiver();
        
        Movie movie = pr.newMovie(pwr.getMovieName(), dr, cast, swr);
        pr.getMoviesNotDistributed().add(movie);
        
        dr.getMovieList().add(movie);
        dr.getSalary().put(movie, pwr.getDirectorWorkRequest().getSalary());
        swr.getMovieList().add(movie);
        swr.getSalary().put(movie, pwr.getDirectorWorkRequest().getSalary());
        for(CastRole cr : cast) {
            cr.getMovieList().add(movie);
        }
        
        double budget = 0;
        budget = budget + pwr.getDirectorWorkRequest().getSalary();
        budget = budget + pwr.getScreenWriterWorkRequest().getSalary();
         for (CastWorkRequest cwr: pwr.getCastWorkRequests()) {
            budget = budget + cwr.getSalary();
            CastRole cr = (CastRole) cwr.getReceiver();
            cr.getSalary().put(movie, cwr.getSalary());
        }
        movie.setBudget(budget);
        pr.getMovieQueue().remove(pwr);
        populateTable();
        JOptionPane.showMessageDialog(this, "Movie has been made.");
        
        DB4OUtil.getInstance().storeSystem(system);
    }//GEN-LAST:event_btnMakeActionPerformed

    private void btnHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistoryActionPerformed
        // TODO add your handling code here:
        ProducerHistoryJPanel producerHistoryJPanel = new ProducerHistoryJPanel(userProcessContainer, ua);
        userProcessContainer.add("producerHistoryJPanel", producerHistoryJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnHistoryActionPerformed

    private void btnDistributeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDistributeActionPerformed
        // TODO add your handling code here:
        DistributeMovieJPanel distributeMovieJPanel = new DistributeMovieJPanel(userProcessContainer, system, network, pr);
        userProcessContainer.add("distributeMovieJPanel", distributeMovieJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnDistributeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDistribute;
    private javax.swing.JButton btnHistory;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnMake;
    private javax.swing.JButton btnPlan;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblProdWorkArea;
    // End of variables declaration//GEN-END:variables

    void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblProdWorkArea.getModel();
        model.setRowCount(0);
        
        pr.movieStatus();
        
        for (ProducerWorkRequest pwr: pr.getMovieQueue()) {
            Object row[] = new Object[2];
            row[0] = pwr;
            row[1] = pwr.getStatus();
            model.addRow(row);
        }
    }
}
