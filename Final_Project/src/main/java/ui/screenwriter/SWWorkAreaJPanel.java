/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.screenwriter;

import db4outil.DB4OUtil;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.EcoSystem;
import model.network.Network;
import model.role.ProducerRole;
import model.role.ScreenWriterRole;
import model.useraccount.UserAccount;
import model.workrequest.ScreenWriterWorkRequest;
import model.workrequest.WorkRequest;

/**
 *
 * @author navyaravuri
 */
public class SWWorkAreaJPanel extends javax.swing.JPanel {
    JPanel userProcessContainer;
    UserAccount ua;
    ScreenWriterRole swr;
    EcoSystem system;
    Network network;
    /**
     * Creates new form SWWorkAreaJPanel
     */
    public SWWorkAreaJPanel(JPanel userProcessContainer, EcoSystem system, Network network, UserAccount ua) {
        initComponents();
        
        this.network = network;
        this.system = system;
        this.userProcessContainer = userProcessContainer;
        this.ua = ua;
        swr = (ScreenWriterRole) ua.getRole();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkRequest = new javax.swing.JTable();
        btnLogout = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        btnDecline = new javax.swing.JButton();
        btnAccept = new javax.swing.JButton();
        btnHistory = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblWorkRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Movie Name", "Salary"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblWorkRequest);
        if (tblWorkRequest.getColumnModel().getColumnCount() > 0) {
            tblWorkRequest.getColumnModel().getColumn(0).setResizable(false);
            tblWorkRequest.getColumnModel().getColumn(1).setResizable(false);
        }

        btnLogout.setBackground(new java.awt.Color(204, 204, 255));
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 51, 51));
        lblTitle.setText("Screenwriter Work Area");

        btnDecline.setBackground(new java.awt.Color(255, 153, 153));
        btnDecline.setText("Decline");
        btnDecline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeclineActionPerformed(evt);
            }
        });

        btnAccept.setBackground(new java.awt.Color(204, 255, 204));
        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        btnHistory.setBackground(new java.awt.Color(136, 197, 197));
        btnHistory.setText("History");
        btnHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(btnLogout)
                        .addGap(185, 185, 185)
                        .addComponent(lblTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnHistory)
                                .addGap(322, 322, 322)
                                .addComponent(btnAccept)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDecline)))))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogout)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDecline)
                    .addComponent(btnAccept)
                    .addComponent(btnHistory))
                .addGap(201, 201, 201))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblWorkRequest.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a movie first.");
            return;
        }
        
        ScreenWriterWorkRequest workRequest = (ScreenWriterWorkRequest) tblWorkRequest.getValueAt(selectedRowIndex, 0);
        workRequest.setStatus("accept");
        
        JOptionPane.showMessageDialog(this, "Movie has been accepted.");
        
        DB4OUtil.getInstance().storeSystem(system);
        populateTable();
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnDeclineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeclineActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblWorkRequest.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a movie first.");
            return;
        }
        
        ScreenWriterWorkRequest workRequest = (ScreenWriterWorkRequest) tblWorkRequest.getValueAt(selectedRowIndex, 0);
        
        ProducerRole pr = (ProducerRole) workRequest.getSender();
        pr.removeMovieRequest(workRequest.getPwr());
        
        JOptionPane.showMessageDialog(this, "Movie has been rejected.");
        
        DB4OUtil.getInstance().storeSystem(system);
        populateTable();
    }//GEN-LAST:event_btnDeclineActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistoryActionPerformed
        // TODO add your handling code here:
        ScreenwriterHistoryJPanel screenwriterHistoryJPanel = new ScreenwriterHistoryJPanel(userProcessContainer, ua);
        userProcessContainer.add("ScreenwriterHistoryJPanel", screenwriterHistoryJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnHistoryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnDecline;
    private javax.swing.JButton btnHistory;
    private javax.swing.JButton btnLogout;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblWorkRequest;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblWorkRequest.getModel();
        model.setRowCount(0);
        ArrayList<ScreenWriterWorkRequest> swq = new ArrayList<ScreenWriterWorkRequest>();
        for (WorkRequest wr: swr.getWorkQueue().getWorkQueue()){
            swq.add((ScreenWriterWorkRequest) wr);
        }
        for (ScreenWriterWorkRequest swwr : swq) {
            if (swwr.getStatus().equals("accept")) continue;
            Object row[] = new Object[3];
            row[0] = swwr;
            row[1] = swwr.getSalary();
            model.addRow(row);
        }
    }
}
