/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import db4outil.DB4OUtil;
import java.awt.CardLayout;
import java.awt.Graphics;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.EcoSystem;
import model.enterprise.Enterprise;
import model.enterprise.TheaterChain;
import model.movie.Movie;
import model.network.Network;
import model.role.AdminRole;
import model.role.CastRole;
import model.role.CustomerRole;
import model.role.CustomerSupportRole;
import model.role.DirectorRole;
import model.role.DistributorRole;
import model.role.ProducerRole;
import model.role.Role;
import model.role.ScreenWriterRole;
import model.role.TheaterManagerRole;
import model.theater.Show;
import model.theater.Theater;
import model.theater.Ticket;
import model.useraccount.UserAccount;
import model.useraccount.UserAccountDirectory;
import ui.admin.AdminWorkAreaJPanel;
import ui.castmember.CastWorkAreaJPanel;
import ui.customer.CustomerWorkAreaJPanel;
import ui.customersupport.CustomerSupportWorkAreaJPanel;
import ui.director.DirectorWorkAreaJPanel;
import ui.distributor.DistributorWorkAreaJPanel;
import ui.producer.ProducerWorkAreaJPanel;
import ui.screenwriter.SWWorkAreaJPanel;
import ui.theatermanager.TheaterManagerWorkAreaJPanel;

/**
 *
 * @author arenarune
 */
public class WelcomePageJPanel extends javax.swing.JPanel {
    EcoSystem system;
    JPanel userProcessContainer;
    DB4OUtil db4oUtil;
    private Image backgroundImage;
    /**
     * Creates new form WelcomePageJPanel
     */
    public WelcomePageJPanel(JPanel userProcessContainer, EcoSystem system, DB4OUtil db4oUtil) {
        initComponents();
        
        this.system = system;
        this.userProcessContainer = userProcessContainer;
        this.db4oUtil = db4oUtil;
        ArrayList<Ticket> tickets = new ArrayList<Ticket>();
        ArrayList<Show> shows = new ArrayList<Show>();
        LocalDate tomorrow = LocalDate.now().plusDays(1);
        
        for (CustomerRole cr : system.getCustomerOrganization().getCustomerRoles()) {
            for (Ticket t : cr.getTickets()) {
                if (t.getShow().getDate().isBefore(tomorrow)) tickets.add(t);
            }
            cr.getTickets().removeAll(tickets);
            tickets.clear();
        }
        
        for (Network network: system.getNetworkList()) {
            for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (e.getEnterpriseType().equals(Enterprise.EnterpriseType.TheaterChain)) {
                    TheaterChain tc = (TheaterChain) e;
                    for (Theater t: tc.getTheaterList()) {
                        for (Show s : t.getShows()) {
                            if (s.getDate().isBefore(tomorrow)) shows.add(s);
                        }
                        for (Movie m: t.getMovieList()) {
                            if (t.getMovieShows().get(m) != null) {
                                t.getMovieShows().get(m).removeAll(shows);
                            }
                        }
                        t.getShows().removeAll(shows);
                        
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtUsername = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        btnRegister = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pwField = new javax.swing.JPasswordField();

        setBackground(new java.awt.Color(255, 255, 255));

        lblTitle.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(102, 51, 255));
        lblTitle.setText("Welcome!");

        lblUsername.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(0, 51, 51));
        lblUsername.setText("Username:");

        lblPassword.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(0, 51, 51));
        lblPassword.setText("Password:");

        btnLogin.setBackground(new java.awt.Color(136, 197, 197));
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnRegister.setBackground(new java.awt.Color(136, 197, 197));
        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 51, 255));
        jLabel1.setText("Login Here");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(304, 304, 304)
                        .addComponent(lblTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(342, 342, 342)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 72, Short.MAX_VALUE)
                            .addComponent(lblPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRegister))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                .addComponent(pwField))
                            .addComponent(btnLogin))))
                .addContainerGap(307, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblPassword, lblUsername, txtUsername});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnLogin, btnRegister});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(pwField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegister)
                    .addComponent(btnLogin))
                .addContainerGap(230, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblPassword, lblUsername, txtUsername});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnLogin, btnRegister});

    }// </editor-fold>//GEN-END:initComponents

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:
        RegistrationJPanel registrationJPanel = new RegistrationJPanel(userProcessContainer, system);
        userProcessContainer.add("registrationJPanel", registrationJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        String un = txtUsername.getText();
        String pw = pwField.getText();
        txtUsername.setText("");
        pwField.setText("");
        Network currentNetwork = null;
        UserAccountDirectory uad = null;
        UserAccount ua = null;
        for (Network network:system.getNetworkList()){
            uad = network.getUserAccountDirectory();
            ua = uad.authenticateUser(un, pw);
            if (ua != null) {
                currentNetwork = network;
            }
        }
        if (ua == null) {
            ua = system.getAdminDirectory().authenticateUser(un, pw);
        }
        if (ua == null) {
            ua = system.getCustomerDirectory().authenticateUser(un, pw);
        }
        if(ua == null) {
            JOptionPane.showMessageDialog(this, "Enter Valid Credentials", "Error", JOptionPane.ERROR_MESSAGE);
            txtUsername.setText("");
            pwField.setText("");
            return;
        }
        
        Role role = ua.getRole();
        
        if(role instanceof AdminRole) {
            AdminWorkAreaJPanel adminWorkAreaJPanel = new AdminWorkAreaJPanel(userProcessContainer, system);
            userProcessContainer.add("adminWorkAreaJPanel", adminWorkAreaJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        if(role instanceof CustomerRole) {
            CustomerWorkAreaJPanel customerWorkAreaJPanel = new CustomerWorkAreaJPanel(userProcessContainer, system, ua);
            userProcessContainer.add("customerWorkAreaJPanel", customerWorkAreaJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        if(role instanceof ProducerRole) {
            ProducerWorkAreaJPanel producerWorkAreaJPanel = new ProducerWorkAreaJPanel(userProcessContainer, system, currentNetwork, ua);
            userProcessContainer.add("producerWorkAreaJPanel", producerWorkAreaJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        if(role instanceof DirectorRole) {
            DirectorWorkAreaJPanel directorWorkAreaJPanel = new DirectorWorkAreaJPanel(userProcessContainer, system, currentNetwork, ua);
            userProcessContainer.add("directorWorkAreaJPanel", directorWorkAreaJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        if(role instanceof CastRole) {
            CastWorkAreaJPanel castWorkAreaJPanel = new CastWorkAreaJPanel(userProcessContainer, system, currentNetwork, ua);
            userProcessContainer.add("castWorkAreaJPanel", castWorkAreaJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        if(role instanceof ScreenWriterRole) {
            SWWorkAreaJPanel sWWorkAreaJPanel = new SWWorkAreaJPanel(userProcessContainer, system, currentNetwork, ua);
            userProcessContainer.add("sWWorkAreaJPanel", sWWorkAreaJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        if(role instanceof DistributorRole) {
            DistributorWorkAreaJPanel distributorWorkAreaJPanel = new DistributorWorkAreaJPanel(userProcessContainer, system, currentNetwork, ua);
            userProcessContainer.add("distributorWorkAreaJPanel", distributorWorkAreaJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        if(role instanceof TheaterManagerRole) {
            TheaterManagerWorkAreaJPanel theaterManagerWorkAreaJPanel = new TheaterManagerWorkAreaJPanel(userProcessContainer, system, currentNetwork, ua);
            userProcessContainer.add("theaterManagerWorkAreaJPanel", theaterManagerWorkAreaJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        if(role instanceof CustomerSupportRole) {
            CustomerSupportWorkAreaJPanel customerSupportWorkAreaJPanel = new CustomerSupportWorkAreaJPanel(userProcessContainer, system, currentNetwork, ua);
            userProcessContainer.add("customerSupportWorkAreaJPanel", customerSupportWorkAreaJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnRegister;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPasswordField pwField;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
