/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.distributor;

import db4outil.DB4OUtil;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.EcoSystem;
import model.network.Network;
import model.role.DistributorRole;
import model.role.ProducerRole;
import model.useraccount.UserAccount;
import model.workrequest.BidRequest;
import model.workrequest.MovieDistributionWorkRequest;
import model.workrequest.WorkRequest;

/**
 *
 * @author navyaravuri
 */
public class DistributorWorkAreaJPanel extends javax.swing.JPanel {
    JPanel userProcessContainer;
    Network network;
    UserAccount ua;
    DistributorRole dr;
    EcoSystem system;
    /**
     * Creates new form DistributorJPanel
     */
    public DistributorWorkAreaJPanel(JPanel userProcessContainer, EcoSystem system, Network network, UserAccount ua) {
        initComponents();
        
        this.system = system;
        this.userProcessContainer = userProcessContainer;
        this.network = network;
        this.ua = ua;
        dr = (DistributorRole) ua.getRole();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDistributor = new javax.swing.JTable();
        lblTitle = new javax.swing.JLabel();
        btnBid = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        btnHistory = new javax.swing.JButton();
        txtBid = new javax.swing.JTextField();
        btnRelease = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblDistributor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movie Name", "Minimum Bid"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDistributor);
        if (tblDistributor.getColumnModel().getColumnCount() > 0) {
            tblDistributor.getColumnModel().getColumn(0).setResizable(false);
            tblDistributor.getColumnModel().getColumn(1).setResizable(false);
        }

        lblTitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 51, 51));
        lblTitle.setText("Distributor Work Area");

        btnBid.setBackground(new java.awt.Color(136, 197, 197));
        btnBid.setText("Bid");
        btnBid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBidActionPerformed(evt);
            }
        });

        btnLogout.setBackground(new java.awt.Color(204, 204, 255));
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        btnHistory.setBackground(new java.awt.Color(136, 197, 197));
        btnHistory.setText("History");
        btnHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistoryActionPerformed(evt);
            }
        });

        btnRelease.setBackground(new java.awt.Color(136, 197, 197));
        btnRelease.setText("Release Movie");
        btnRelease.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReleaseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(btnLogout)
                .addGap(185, 185, 185)
                .addComponent(lblTitle)
                .addGap(283, 283, 283))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRelease)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnHistory)
                        .addGap(354, 354, 354)
                        .addComponent(txtBid, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBid, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(111, 111, 111))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBid, btnHistory, txtBid});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle)
                    .addComponent(btnLogout))
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBid)
                    .addComponent(btnHistory)
                    .addComponent(txtBid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnRelease)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBid, btnHistory, txtBid});

    }// </editor-fold>//GEN-END:initComponents

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnBidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBidActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblDistributor.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a movie first.");
            return;
        }
        MovieDistributionWorkRequest mdwr = (MovieDistributionWorkRequest) tblDistributor.getValueAt(selectedRowIndex, 0);
        double bidAmount;
        try{
            bidAmount = Double.parseDouble(txtBid.getText());
            if (bidAmount < mdwr.getMinimumBid()) {
                JOptionPane.showMessageDialog(this, "The amount should be more than minimum bid listed.", "Warning", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Enter a valid Bid Amount.", "Warning", JOptionPane.ERROR_MESSAGE);
            return;
        }
        ProducerRole pr = (ProducerRole) mdwr.getSender();
        BidRequest br = new BidRequest();
        br.setSender(dr);
        br.setReceiver(pr);
        br.setBidAmount(bidAmount);
        ArrayList<BidRequest> bidList = pr.getBidQueue().get(mdwr.getMovie());
        
        if(bidList == null) {
            bidList = new ArrayList<BidRequest>();
            pr.getBidQueue().put(mdwr.getMovie(), bidList);
        }
        
        bidList.add(br);
        
        JOptionPane.showMessageDialog(this, "Bid has been Placed.");
        txtBid.setText("");
        dr.getWorkQueue().getWorkQueue().remove(mdwr);
        populateTable();
        
        DB4OUtil.getInstance().storeSystem(system);
    }//GEN-LAST:event_btnBidActionPerformed

    private void btnHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistoryActionPerformed
        // TODO add your handling code here:
        DistributorHistoryJPanel distributorHistoryJPanel = new DistributorHistoryJPanel(userProcessContainer, ua);
        userProcessContainer.add("distributorHistoryJPanel", distributorHistoryJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnHistoryActionPerformed

    private void btnReleaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReleaseActionPerformed
        // TODO add your handling code here:
        DistributorReleaseJPanel distributorReleaseJPanel = new DistributorReleaseJPanel(userProcessContainer, system, network, ua);
        userProcessContainer.add("distributorReleaseJPanel", distributorReleaseJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnReleaseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBid;
    private javax.swing.JButton btnHistory;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnRelease;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblDistributor;
    private javax.swing.JTextField txtBid;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        ArrayList<MovieDistributionWorkRequest> workQueue = new ArrayList<MovieDistributionWorkRequest>();
        for (WorkRequest wr : dr.getWorkQueue().getWorkQueue()) {
            workQueue.add((MovieDistributionWorkRequest) wr);
        }
        
        DefaultTableModel model = (DefaultTableModel) tblDistributor.getModel();
        model.setRowCount(0);
        
        for(MovieDistributionWorkRequest mdwr : workQueue) {
            Object row[] = new Object[2];
            
            row[0] = mdwr;
            row[1] = mdwr.getMinimumBid();
            
            model.addRow(row);
        }
    }
}
